---
title: "total_stats"
output:
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE, echo = FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(jsonlite)
library(rjson)
library(dplyr)
library(data.table)
library(ggplot2)
library(scales)
library(sp)
```

```{r, echo = FALSE}
#this chunk does the percentages for the totals for every group
data <-read.csv("persons.csv", na.strings=c(" "))
data2 <- data
json_file <- "genderize_results.json"
newout <- jsonlite::fromJSON(json_file)

r = 1
while (r <= nrow(data)) {
  oldgen = (data[r,]$gender)
  if ((oldgen != "F") && (oldgen != "M")){
    newgen = (newout[r,]$gender)
    if(is.na(newgen)){
      #print("oh well")
    }
    else{
      if(newgen == "female"){
      data[r,]$gender = "F"
      }
      if(newgen == "male"){
        data[r,]$gender = "M"
      }
    }
  }
  r = r + 1
}

summary(data$gender)
summary(data2$gender)
```

```{r, echo = FALSE}
api <- data[, c(1, 16)]

x <- toJSON(unname(split(api, 1:nrow(data))))
cat(x)

T_g <- nrow(data)
M_g <- subset(data, gender=="M")
F_g <- subset(data, gender=="F")
NA_g <- subset(data, gender=="NA")

T_pc_chair <- subset(data, as_pc_chair>0)
M_pc_chair <- subset(T_pc_chair, gender=="M")
F_pc_chair <- subset(T_pc_chair, gender=="F")
NA_pc_chair <- subset(T_pc_chair, gender=="NA")

T_pc <- subset(data, as_pc>0)
M_pc <- subset(T_pc, gender=="M")
F_pc <- subset(T_pc, gender=="F")
NA_pc <- subset(T_pc, gender=="NA")

T_session_chair <- subset(data, as_session_chair>0)
M_session_chair <- subset(T_session_chair, gender=="M")
F_session_chair <- subset(T_session_chair, gender=="F")
NA_session_chair <- subset(T_session_chair, gender=="NA")

T_panelist <- subset(data, as_panelist>0)
M_panelist <- subset(T_panelist, gender=="M")
F_panelist <- subset(T_panelist, gender=="F")
NA_panelist <- subset(T_panelist, gender=="NA")

T_keynote_speaker <- subset(data, as_keynote_speaker>0)
M_keynote_speaker <- subset(T_keynote_speaker, gender=="M")
F_keynote_speaker <- subset(T_keynote_speaker, gender=="F")
NA_keynote_speaker <- subset(T_keynote_speaker, gender=="NA")

T_author <- subset(data, as_author>0)
M_author <- subset(T_author, gender=="M")
F_author <- subset(T_author, gender=="F")
NA_author <- subset(T_author, gender=="NA")

total = "Total"
pc_chair = "pc_chair"
pc = "pc"
session_chair = "session_chair"
panelist = "panelist"
keynote_speaker = "keynote_speaker"
author = "author"
frame_roles = c(total, pc_chair, pc, session_chair, panelist, keynote_speaker, author)


frame_totals = c(T_g, nrow(T_pc_chair), nrow(T_pc), nrow(T_session_chair), nrow(T_panelist), nrow(T_keynote_speaker), nrow(T_author))
frame_Ms = c(nrow(M_g), nrow(M_pc_chair), nrow(M_pc), nrow(M_session_chair), nrow(M_panelist), nrow(M_keynote_speaker), nrow(M_author))
frame_Mps = c((nrow(M_g)/T_g*100), (nrow(M_pc_chair)/nrow(T_pc_chair)*100), (nrow(M_pc)/nrow(T_pc)*100), (nrow(M_session_chair)/nrow(T_session_chair)*100), (nrow(M_panelist)/nrow(T_panelist)*100), (nrow(M_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(M_author)/nrow(T_author)*100))

frame_Fs = c(nrow(F_g), nrow(F_pc_chair), nrow(F_pc), nrow(F_session_chair), nrow(F_panelist), nrow(F_keynote_speaker), nrow(F_author))
frame_Fps = c((nrow(F_g)/T_g*100), (nrow(F_pc_chair)/nrow(T_pc_chair)*100), (nrow(F_pc)/nrow(T_pc)*100), (nrow(F_session_chair)/nrow(T_session_chair)*100), (nrow(F_panelist)/nrow(T_panelist)*100), (nrow(F_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(F_author)/nrow(T_author)*100))

frame_NAs = c(nrow(NA_g), nrow(NA_pc_chair), nrow(NA_pc), nrow(NA_session_chair), nrow(NA_panelist), nrow(NA_keynote_speaker), nrow(NA_author))
frame_NAps = c((nrow(NA_g)/T_g*100), (nrow(NA_pc_chair)/nrow(T_pc_chair)*100), (nrow(NA_pc)/nrow(T_pc)*100), (nrow(NA_session_chair)/nrow(T_session_chair)*100), (nrow(NA_panelist)/nrow(T_panelist)*100), (nrow(NA_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(NA_author)/nrow(T_author)*100))

#frame_checkerrors = c(frame_Ms + frame_Fs + frame_NAs - frame_totals)
#frame_checkerrorps = c(frame_Mps + frame_Fps + frame_NAps - 100)
#empt.data <- data.frame("Overall", frame_roles, frame_totals, frame_Ms, frame_Mps, frame_Fs, frame_Fps, frame_NAs, frame_NAps, frame_checkerrors, frame_checkerrorps)

empt.data <- data.frame("Overall", frame_roles, frame_totals, frame_Ms, frame_Mps, frame_Fs, frame_Fps, frame_NAs, frame_NAps)
is.num <- sapply(empt.data, is.numeric)
empt.data[is.num] <- lapply(empt.data[is.num], round, 2)
colnames(empt.data) <- c("Conf Name", "Role", "Totals", "  Ms", " M_%s", "  Fs", " F_%s", "  NAs", " NA_%s")
print(empt.data)
```

```{r, echo = FALSE}
#this chunk does the percentages for the totals for a given conference
#checking <- subset(data, gs_email =="@monash.edu" & data$pcs %like% "CCGrid")
#data <-read.csv("persons.csv", na.strings=c(" "))

conferences = list("ASPLOS", "ATC", "CCGrid", "CCS", "CIDR", "CLOUD", "Cluster", "CoNEXT", "EuroPar",  "EuroSys", "FAST", "HCW", "HiPC", "HotCloud", "HotI", "HotOS", "HotStorage", "HPCA", "HPCC", "HPDC", "ICAC", "ICDM", "ICPE", "ICPP", "IGSC", "IISWC", "IMC", "IPDPS", "ISC", "ISCA", "ISPASS", "KDD", "MASCOTS", "MICRO", "Middleware", "MobiCom", "NDSS", "NSDI", "OOPSLA", "PACT", "PLDI", "PODC", "PODS", "PPoPP", "SC", "SIGCOMM", "SIGIR", "SIGMETRICS", "SIGMOD", "SLE", "SOCC", "SOSP", "SP", "SPAA", "SYSTOR", "VEE")

#CHOOSE YR CONFERENCE
#conferences = list("SIGCOMM")
#CHOOSE YR CONFERENCE

outlist <- list()
conf_names <- c()
percentages <- c()
Fpercentages <- c()

ratios <- c()
conf_namess <- c()
shade <- c()

currdoing = 2
i = 1

for (conf in conferences){

T_g <- subset(data, (data$pc_chairs %like% conf) | (data$pcs %like% conf) | (data$session_chairs %like% conf) | (data$panels %like% conf) | (data$keynotes %like% conf) | (data$papers %like% conf))
M_g <- subset(T_g, gender =="M")
F_g <- subset(T_g, gender=="F")
NA_g <- subset(T_g, gender=="NA")

T_pc_chair <- subset(data, data$pc_chairs %like% conf)
M_pc_chair <- subset(T_pc_chair, gender=="M")
F_pc_chair <- subset(T_pc_chair, gender=="F")
NA_pc_chair <- subset(T_pc_chair, gender=="NA")

T_pc <- subset(data, data$pcs %like% conf)
M_pc <- subset(T_pc, gender=="M")
F_pc <- subset(T_pc, gender=="F")
NA_pc <- subset(T_pc, gender=="NA")

T_session_chair <- subset(data, data$session_chairs %like% conf)
M_session_chair <- subset(T_session_chair, gender=="M")
F_session_chair <- subset(T_session_chair, gender=="F")
NA_session_chair <- subset(T_session_chair, gender=="NA")

T_panelist <- subset(data, data$panels %like% conf)
M_panelist <- subset(T_panelist, gender=="M")
F_panelist <- subset(T_panelist, gender=="F")
NA_panelist <- subset(T_panelist, gender=="NA")

T_keynote_speaker <- subset(data, data$keynotes %like% conf)
M_keynote_speaker <- subset(T_keynote_speaker, gender=="M")
F_keynote_speaker <- subset(T_keynote_speaker, gender=="F")
NA_keynote_speaker <- subset(T_keynote_speaker, gender=="NA")

T_author <- subset(data, data$papers %like% conf)
M_author <- subset(T_author, gender=="M")
F_author <- subset(T_author, gender=="F")
NA_author <- subset(T_author, gender=="NA")

total = "Total"
pc_chair = "pc_chair"
pc = "pc"
session_chair = "session_chair"
panelist = "panelist"
keynote_speaker = "keynote_speaker"
author = "author"
frame_roles = c(total, pc_chair, pc, session_chair, panelist, keynote_speaker, author)


frame_totals = c(nrow(T_g), nrow(T_pc_chair), nrow(T_pc), nrow(T_session_chair), nrow(T_panelist), nrow(T_keynote_speaker), nrow(T_author))
frame_Ms = c(nrow(M_g), nrow(M_pc_chair), nrow(M_pc), nrow(M_session_chair), nrow(M_panelist), nrow(M_keynote_speaker), nrow(M_author))
frame_Mps = c((nrow(M_g)/nrow(T_g)*100), (nrow(M_pc_chair)/nrow(T_pc_chair)*100), (nrow(M_pc)/nrow(T_pc)*100), (nrow(M_session_chair)/nrow(T_session_chair)*100), (nrow(M_panelist)/nrow(T_panelist)*100), (nrow(M_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(M_author)/nrow(T_author)*100))

frame_Fs = c(nrow(F_g), nrow(F_pc_chair), nrow(F_pc), nrow(F_session_chair), nrow(F_panelist), nrow(F_keynote_speaker), nrow(F_author))
frame_Fps = c((nrow(F_g)/nrow(T_g)*100), (nrow(F_pc_chair)/nrow(T_pc_chair)*100), (nrow(F_pc)/nrow(T_pc)*100), (nrow(F_session_chair)/nrow(T_session_chair)*100), (nrow(F_panelist)/nrow(T_panelist)*100), (nrow(F_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(F_author)/nrow(T_author)*100))

frame_NAs = c(nrow(NA_g), nrow(NA_pc_chair), nrow(NA_pc), nrow(NA_session_chair), nrow(NA_panelist), nrow(NA_keynote_speaker), nrow(NA_author))
frame_NAps = c((nrow(NA_g)/nrow(T_g)*100), (nrow(NA_pc_chair)/nrow(T_pc_chair)*100), (nrow(NA_pc)/nrow(T_pc)*100), (nrow(NA_session_chair)/nrow(T_session_chair)*100), (nrow(NA_panelist)/nrow(T_panelist)*100), (nrow(NA_keynote_speaker)/nrow(T_keynote_speaker)*100), (nrow(NA_author)/nrow(T_author)*100))

conf_name <- conf

#frame_checkerrors = c(frame_Ms + frame_Fs + frame_NAs - frame_totals)
#frame_checkerrorps = c(frame_Mps + frame_Fps + frame_NAps - 100)
#emp.data <- data.frame(conf_name, frame_roles, frame_totals, frame_Ms, frame_Mps, frame_Fs, frame_Fps, frame_NAs, frame_NAps, frame_checkerrors, frame_checkerrorps)

emp.data <- data.frame(conf_name, frame_roles, frame_totals, frame_Ms, frame_Mps, frame_Fs, frame_Fps, frame_NAs, frame_NAps)
is.num <- sapply(emp.data, is.numeric)
emp.data[is.num] <- lapply(emp.data[is.num], round, 2)
colnames(emp.data) <- c("Conf Name", "Role", "Totals", "  Ms", " M_%s", "  Fs", " F_%s", "  NAs", " NA_%s")
conf_names <- c(conf_names, rep(conf_name,3))
Mpc = (emp.data[currdoing,5])
Fpc = (emp.data[currdoing,7])
NApc = (emp.data[currdoing,9])
percentages <- c(percentages, Mpc, Fpc, NApc)
Fpercentages <- c(Fpercentages, rep(Fpc,3))

conf_namess <-c(conf_namess, conf_name)
Mc = (emp.data[currdoing,4])
Fc = (emp.data[currdoing,6])
if(Mc == 0){
  rati = Fc/1
} else if (Fc == 0){
  rati = 0.01
} else {
  rati = Fc/Mc
}
ratios <- c(ratios, rati)
shade <- c(shade, "1")

outlist[[i]] <- emp.data
i = i + 1
}
outlist[[i]] <- empt.data
print(outlist)

TMpc = (empt.data[currdoing,5])
TFpc = (empt.data[currdoing,7])
TNApc = (empt.data[currdoing,9])
gender = rep(c("M","F","NA"),57)
conf_names <- c(conf_names, rep("Total",3))
percentages <- c(percentages, TMpc, TFpc, TNApc)
Fpercentages <- c(Fpercentages, rep(TFpc,3))

TMc = (empt.data[currdoing,4])
TFc = (empt.data[currdoing,6])
conf_namess <-c(conf_namess, "Total")
if(TMc == 0){
  rati = Fc/1
} else if (TFc == 0){
  rati = 0.01
} else {
  rati = TFc/TMc
}
ratios <- c(ratios, rati)
shade <- c(shade, "2")
ratios <- c(ratios, 0.2)
shade <- c(shade, "3")
conf_namess <-c(conf_namess, "Graduates")

#general
#plotdata = data.frame(conf_names,gender,percentages,Fpercentages)
#plotdata$conf_names <- factor(plotdata$conf_names, levels = unique(plotdata$conf_names[order(plotdata$Fpercentages)]))
#outplot <-  ggplot() + geom_bar(aes(fill = gender, y = percentages, x = conf_names), data = plotdata, stat= "identity", position = "fill") + labs(title="Distribution of Gender amongst PC Members", x ="Conferences", y = "Proportion of Genders") + scale_y_continuous(labels = dollar_format(suffix = "%", prefix = "")) + coord_flip()

#proportion
plotdata = data.frame(conf_namess, ratios, shade)
plotdata$conf_namess <- factor(plotdata$conf_namess, levels = unique(plotdata$conf_namess[order(plotdata$ratios)]))
outplot <- ggplot(data = plotdata, aes(y = ratios, x = conf_namess, fill = shade)) + geom_bar(stat= "identity") + labs(title="Proportion of Gender amongst Authors", x ="Conferences", y = "Proportion of Genders") + theme_minimal() + coord_flip()

outplot
ggsave("outplotfractauth.png", height = 7, limitsize = FALSE)
```
